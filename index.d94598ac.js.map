{"mappings":"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","sources":["src/js/code.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n    const arrow = document.querySelector('.separator__arrow-button');\n\n    arrow.addEventListener('click', clickFunction);\n});\n\nconst clickFunction = (e) => {\n    let now = new Date();\n    let date = new Date();\n\n    let result = isDateValid(now, date);\n    if (result.success) {\n        calculateAge(now, result.date);\n    }\n    console.log(e);\n}\n\nfunction isDateValid(now, date) {\n    const dayId = document.querySelector(\"#dayId\");\n    const monthId = document.querySelector(\"#monthId\");\n    const yearId = document.querySelector(\"#yearId\");\n\n    //validates each input separately\n    let result = ValidateEveryInput(dayId, monthId, yearId, now);\n\n    //if any of the inputs is incorrect return result\n    if(!result.success) {\n        return result;\n    }\n\n    //if each entry is correct, set the date with given data and validate if that date exists in the past\n    date.setFullYear(+yearId.value);\n    date.setMonth(+monthId.value - 1);\n    date.setDate(+dayId.value);\n\n    let isDateCorrect = date.getFullYear() === +yearId.value && date.getMonth() === +monthId.value - 1 && date.getDate() === +dayId.value;\n\n    //the date is incorrect\n    if (isNaN(date.getDate()) || !isDateCorrect) {\n        addInvalidDateValidation(VALIDATION_ERROR_INCORRECT_DATE);\n        return { success: false };\n    }\n    //the date is in the future\n    else if (now < date) {\n        addInvalidDateValidation(VALIDATION_ERROR_DATE_IN_THE_FUTURE);\n        return { success: false };\n    }\n    else {\n        removeAllValidation(dayId, monthId, yearId)\n        return { success: true, date: date };\n    }\n}\n\nfunction removeAllValidation(dayId, monthId, yearId) {\n    removeValidationMessagesAndStyles(dayId);\n    removeValidationMessagesAndStyles(monthId);\n    removeValidationMessagesAndStyles(yearId);\n}\n\nfunction ValidateEveryInput (dayId, monthId, yearId, now) {\n    let isDayCorrect = !!dayId.value && (!isNaN(dayId.value) && dayId.value >= 1 && dayId.value <= 31);\n    let isMonthCorrect = !!monthId.value && (!isNaN(monthId.value) && monthId.value >= 1 && monthId.value <= 12);\n    let isYearCorrect = !!yearId.value && (!isNaN(yearId.value));\n    let isYearInThePast = !!yearId.value && (yearId.value <= now.getFullYear());\n    let isAnyValidFlag = true;\n\n    isAnyValidFlag = isInputValid(isDayCorrect, !dayId.value, dayId, VALIDATION_ERROR_INCORRECT_DAY) && isAnyValidFlag;\n    isAnyValidFlag = isInputValid(isMonthCorrect, !monthId.value, monthId, VALIDATION_ERROR_INCORRECT_MONTH) && isAnyValidFlag;\n    isAnyValidFlag = isInputValid(isYearCorrect, !yearId.value, yearId, VALIDATION_ERROR_INCORRECT_YEAR) && isAnyValidFlag;\n    isAnyValidFlag = isInputValid(isYearInThePast, !yearId.value, yearId, VALIDATION_ERROR_DATE_IN_THE_FUTURE) && isAnyValidFlag;\n\n    return { success: isAnyValidFlag };\n}\n\nfunction addInvalidDateValidation(message) {\n    const dayId = document.getElementById(\"dayId\");\n    const monthId = document.getElementById(\"monthId\");\n    const yearId = document.getElementById(\"yearId\");\n    addValidationMessageAndStyles(dayId, message);\n    addValidationMessageAndStyles(monthId, EMPTY_STRING);\n    addValidationMessageAndStyles(yearId, EMPTY_STRING);\n}\n\nfunction isInputValid(isInputCorrect, isInputNull, input, validationMessage) {\n    if (!isInputCorrect) {\n        if (isInputNull) {\n            addValidationMessageAndStyles(input, VALIDATION_ERROR_FIELD_REQUIRED);\n            return false;\n        }\n        else {\n            addValidationMessageAndStyles(input, validationMessage);\n            return false;\n        }\n    }\n    else {\n        removeValidationMessagesAndStyles(input);\n\n        return true;\n    }\n}\n\nfunction removeValidationMessagesAndStyles(element) {\n    element.style.borderColor = EMPTY_STRING;\n\n    if (element.nextElementSibling !== null) {\n        element.nextElementSibling.textContent = EMPTY_STRING;\n    }\n    if (element.previousElementSibling !== null) {\n        element.previousElementSibling.style.color = EMPTY_STRING;\n    }\n}\n\nfunction addValidationMessageAndStyles(element, validationMessage) {\n    element.style.borderColor = 'var(--LightRed)';\n    if (element.nextElementSibling !== null) {\n        element.nextElementSibling.textContent = validationMessage;\n    }\n    if (element.previousElementSibling !== null) {\n        element.previousElementSibling.style.color = 'var(--LightRed)';\n    }\n}\n\nfunction calculateAge(now, date) {\n    let diffMs = now - date;\n    let age = new Date(diffMs);\n\n    let years = Math.abs(age.getUTCFullYear() - 1970);\n    let months = Math.abs(age.getMonth());\n    let days = Math.abs(age.getUTCDate() - 1);\n\n    document.getElementById(\"yearsResultId\").textContent = years + SPACE;\n    document.getElementById(\"monthsResultId\").textContent = months + SPACE;\n    document.getElementById(\"daysResultId\").textContent = days + SPACE;\n}\n\n\n\n"],"names":[],"version":3,"file":"index.d94598ac.js.map","sourceRoot":"/__parcel_source_root/"}